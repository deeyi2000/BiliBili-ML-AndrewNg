<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>88849376</chatid><mission>0</mission><maxlimit>1000</maxlimit><state>0</state><real_name>0</real_name><source>k-v</source><d p="148.18300,1,25,16777215,1604402489,0,5880aa35,40506655684689925">因为k=2的时候就是二元分类，没必要，等于1即可，所以k从3开始是多元分类</d><d p="1.75100,1,25,16777215,1604394124,0,dc72d07c,40502269839933445">上个练习题做了一上午+下午1个多小时</d><d p="346.61000,1,25,16777215,1604220060,0,e6aeba36,40411010269446149">不是的，j代表theta矩阵的行数（是S_j+1，相当于第j+1层的单元数），i代表theta矩阵的列数（是S_j，即第j层的单元数），可把前一层unit数当做feature数，后一层当做样本数理解</d><d p="329.62100,1,25,16777215,1604219853,0,e6aeba36,40410902145007621">计算error只有输出层，但theta的惩罚是每层都有？</d><d p="307.22800,1,25,16777215,1604219797,0,e6aeba36,40410872707284997">k应该是分类的个数吧，相当于有m个输出，每个输出是一个k维向量，计算每个对应向量的error并求和</d><d p="196.76400,1,25,16777215,1604205484,0,530a7c33,40403368290549763">天天问是不是少个括号，啥问题</d><d p="220.25600,1,25,16777215,1603857609,0,55e96d0b,40220981588918277">前方高能</d><d p="259.81400,1,25,16777215,1603719303,0,d2e6a487,40148469646098437">16个在看的小伙伴你们好啊</d><d p="262.82400,1,25,16777215,1603697615,0,1ce2feed,40137098931470343">K位置是对的啊</d><d p="341.50400,1,25,16777215,1603476697,0,51cb4da2,40021274341146629">感谢前面</d><d p="184.15300,1,25,16777215,1603371159,0,b289798a,39965941710192645">危</d><d p="137.32500,1,25,16777215,1603333663,0,64b36954,39946283176165383">为什么多元分类k不是大于等于2呀</d><d p="168.46900,1,25,16777215,1603271580,0,6ad9296b,39913733623382019">离开家离开家</d><d p="11.65200,1,25,16777215,1602830547,0,12ab561e,39682505555574787">郑xy同学你来了嘛</d><d p="382.87200,1,25,16777215,1602751371,0,960b8744,39640994209071109">这式子没错，说错的自己再想想</d><d p="345.95100,1,25,16777215,1602750966,0,960b8744,39640782325415941">这里是 s(j+1)不是s(j)+1</d><d p="327.64600,1,25,16777215,1602750566,0,960b8744,39640572410462211">多层啊</d><d p="303.83700,1,25,16777215,1602749557,0,76fb615,39640043094016007">使用均方误差可以吗?</d><d p="251.01700,1,18,15138834,1602722293,0,99e8f16a,39625749199585287">打扰了</d><d p="249.80900,1,25,16777215,1602722278,0,99e8f16a,39625741370916869">打扰了</d><d p="297.78200,1,25,16777215,1602506997,0,1f63a2a9,39512872341995527">9个人</d><d p="394.63200,1,25,16777215,1602403751,0,ea8195df,39458741353971717">没有反，结合前几节的图对照一下，i是从0开始数，j从1开始数</d><d p="190.00300,1,25,16777215,1602054043,0,ec39c87a,39275393524432899">你好呀，另外九个老弟</d><d p="238.19900,1,25,16777215,1602040088,0,583a6edf,39268077448200195">看不懂，告辞</d><d p="218.44800,1,25,16777215,1601864478,0,dd8a14f2,39176006945734661">前方高能</d><d p="222.26200,1,25,16777215,1601860519,0,4c28bb0c,39173931616174085">关弹幕了</d><d p="251.33900,1,25,16777215,1601819972,0,b9189f07,39152673028046855">幼儿圆学的（滑稽）</d><d p="353.60900,1,25,16777215,1601729360,0,7575641,39105166352842759">只有一层个锤子</d><d p="329.98400,1,25,16777215,1601389481,0,d1b1be60,38926972064628741">应该是只有一层吧</d><d p="357.49300,1,25,16646914,1601381007,0,1c0a0089,38922528848084999">是下标l+1不是sl+1</d><d p="0.00000,1,25,16777215,1601376657,0,129d8880,38920248280743939">hello world</d><d p="204.60900,1,25,16777215,1601276690,0,5cea00b8,38867836929048579">这有没有括号不是一样的吗我服了</d><d p="52.13600,1,25,16777215,1601193536,0,d1ab7058,38824240224927749">西瓜书是啥</d><d p="236.26100,1,25,16777215,1601032169,0,c1387119,38739637290663943">.</d><d p="184.84500,1,25,16777215,1600935574,0,ebed03cb,38688994083471365">那九个老哥，你们好</d><d p="184.84500,1,25,16777215,1600935557,0,ebed03cb,38688984696094725">那9个老哥，你们好</d><d p="254.93600,1,25,16777215,1600930475,0,d301dc93,38686320378773509">上幼儿园的侄子说他胎教的时候就学过</d><d p="373.75300,1,25,16777215,1600783007,0,b5fd1487,38609004708495365">他说的对</d><d p="265.89300,1,25,16777215,1599749075,0,76399510,38066926734278659">K没错吧</d><d p="265.89300,1,25,16777215,1599749069,0,76399510,38066923487363079">K</d><d p="382.93000,1,25,16777215,1598411768,0,8880d965,37365792827768835">所有权重的平方和</d><d p="291.10500,1,25,16777215,1597799792,0,88920c6e,37044940881002503">J代表行数，理解为S（L+1）就懂了</d><d p="227.65200,1,25,16777215,1597673618,0,f0108d83,36978789486952451">我去真高能</d><d p="189.61100,5,25,16776960,1597555095,0,28b8c839,36916649476489219">那么二分类的代价函数其实是与逻辑回归模型的代价函数相同吗</d><d p="299.62900,1,25,16777215,1597070231,0,2ec241e2,36662441064529925">这个绿色下划线的k是不是标错了</d><d p="348.19400,1,25,16777215,1596640927,0,f979e7b8,36437361811783683">就是相当于加上所有的误差和所有theta的正则项</d><d p="324.03100,1,25,16777215,1596533052,0,3a69bd3,36380804522704899">这是只有一层的情况吗</d><d p="302.04200,1,25,16777215,1596510206,0,61ed7afc,36368826521092099">一边是老师的讲解，一边是弹幕的讲解，你们在看谁的？</d><d p="339.01800,1,25,16777215,1596252313,0,42fb104b,36233616518283269">所以sl是什么</d><d p="400.00700,5,25,16646914,1596168293,0,916f83f3,36189565765550087">反没反没关系，理解就好</d><d p="224.69800,5,25,16646914,1596167803,0,916f83f3,36189308618539013">西格玛默认对含i下标的多项式求和，所以中括号的位置没错，只是为了提出来-1/m</d><d p="5.68200,5,25,16646914,1595854545,0,973c5451,36025071385444355">50/112</d><d p="222.33300,1,25,16777215,1595742323,0,b7cbae70,35966234512064515">写i不带括号可以的</d><d p="340.14600,1,25,16777215,1595555838,0,51ce0ffe,35868462774484997">Sl+1 的1是加在l上的，不是Sl整体加1，让我推了半天才发现。。。</d><d p="95.11200,1,25,16777215,1595469672,0,3e3b3709,35823287242588163">不想写</d><d p="244.42600,1,25,16777215,1595248246,0,43ec4759,35707195948531715">本小学生表示这太简单了</d><d p="309.04100,1,25,16777215,1595152603,0,a32d3583,35657051598749699">难道没看到l是从1到L-1的吗</d><d p="26.76900,1,25,16777215,1594725258,0,a278305e,35432999560937475">你好</d><d p="397.14200,1,25,16777215,1594649093,0,6248a030,35393067486281733">这边第二项theta的下标i,j交换一下比较好理解</d><d p="20.95400,1,25,16777215,1594176186,0,be1b7eb6,35145128056717315">高考回来看</d><d p="4.04600,1,25,16777215,1594063726,0,994591db,35086166156378117">这章学完大家准备期末考试</d><d p="181.16100,1,25,16777215,1593952832,0,cb6223e9,35028025969475589">危险警告</d><d p="92.20000,1,25,16777215,1593767206,0,3467c167,34930704617308167">有</d><d p="222.37100,1,25,16777215,1593689421,0,12fb4a99,34889922773516291">少写你mb的括号</d><d p="45.81900,1,25,16777215,1593245866,0,5c0b1af8,34657372058681347">这个真的需要写程序带着问题多看几遍，才能深刻理解，结合西瓜书服用效果更佳</d><d p="41.77700,1,25,16777215,1593236538,0,d40b25cf,34652481815314435">6月27日13:42 另外一个人你好</d><d p="25.09900,1,25,16777215,1593236483,0,d40b25cf,34652452698456067">另外一个人你好</d><d p="2.58500,1,25,16777215,1593143684,0,2dbf08d8,34603799633461251">50/112</d><d p="203.70800,1,25,16777215,1592834356,0,5ad18398,34441622193176579">就是带正则项的极大似然估计再取负号，交叉熵</d><d p="85.06400,1,25,16777215,1592834147,0,5ad18398,34441512611741699">S3咋不写了</d><d p="400.47700,1,25,16777215,1592201438,0,8b357bd9,34109791188025347">说反的，建议回去前面看看矩阵</d><d p="225.94700,1,25,16777215,1592098458,0,51220c9e,34055800147148803">妈妈救我</d><d p="195.28400,1,25,16777215,1591843973,0,ab516041,33922376274018307">高能预警</d><d p="278.79700,1,25,16777215,1591843501,0,ab516041,33922129159258117">这是单层的cost吧</d><d p="230.50300,1,25,16777215,1591843446,0,ab516041,33922100230094853">有趣</d><d p="292.73200,1,25,16777215,1591095965,0,cb20a6db,33530204926246915">看到这里我终于裂开了</d><d p="378.94700,1,25,16777215,1590806413,0,a1dfe232,33378396232220677">为什么把regularization翻译成正则？</d><d p="354.27900,1,25,16777215,1590670903,0,27135200,33307350139404293">我懂了</d><d p="381.29600,1,25,16777215,1590629967,0,716d3933,33285887691325447">ji没错，参考前面的标号就知道了</d><d p="85.63100,1,25,16777215,1590320324,0,eff34506,33123545769836547">有人吗</d><d p="25.19700,1,25,16646914,1590289488,0,f1ec1c27,33107378890604551">张润琪在吗</d><d p="227.35400,1,25,16777215,1589790352,0,1810c563,32845687884873735">能不能不要在这里贩卖焦虑了</d><d p="353.14500,1,25,16777215,1589683333,0,7e91fd04,32789579080663111">注意这里的i,j不是线代里矩阵的i,j是求和公式里theta的下标</d><d p="146.68700,1,25,16777215,1589622882,0,29553587,32757885277044743">晕乎了</d><d p="231.31400,1,25,16777215,1589183581,0,893a93a,32527565099368455">awsl</d><d p="22.99200,1,25,16777215,1589086513,0,c6ee7e2d,32476673138491395">2</d><d p="8.80200,1,25,16777215,1589086498,0,c6ee7e2d,32476665725059079">1</d><d p="388.25500,1,25,16777215,1588864610,0,c9e121b,32360332019105799">theta矩阵不是 thetasl</d><d p="396.57700,1,25,16777215,1588378246,0,7dc0d64a,32105337420513287">请问 i、j位置应该没有多大关系吧？我觉得先行后列和先列后行都没什么区别啊？求解答</d><d p="378.89200,1,25,16777215,1588249654,0,34571c59,32037917989797895">前面一层决定了theta是几个参数的啊，所以i和j的位置没有错啊</d><d p="379.09700,1,25,16777215,1587951790,0,a9281c7c,31881751797170179">j是行 i是列</d><d p="248.44100,1,25,16777215,1587864698,0,f7cc1693,31836090456866819">毕导：小学二年级就学过了BP神经网络</d><d p="218.66300,1,25,16777215,1587811447,0,1b808049,31808171614404613">建议自己推一下向量化的表示方式，编程的时候方便很多</d><d p="197.23800,1,25,16777215,1587452745,0,372f0c7c,31620108633767941">可能加减的优先级高于求和</d><d p="248.08900,1,25,16777215,1586783504,0,851a0a62,31269233103994883">胎教两个月表示太简单</d><d p="285.41600,1,25,16777215,1586703820,0,28a379c1,31227456090800131">在正则化部分，l=1加到L-1是指层数，i 和j表示一层的theta矩阵的列数和行数</d><d p="244.75900,1,25,16777215,1586680400,0,e924b367,31215177340289027">幼儿园大班表示全明白</d><d p="229.03900,1,25,16777215,1586572165,0,45753278,31158431025987587">k值也可以这么理解，你分k类就需要k种权重向量</d><d p="1.22400,1,25,16777215,1586516631,0,d4437e2a,31129315298508805">童俊哲在吗？？？？</d><d p="338.74000,1,25,16777215,1586362416,0,2e0bdfc2,31048461808304135">l表示不同层，i表示不同神经元，j表示每个神经元激活函数中不同的参数，所以会涉及三个层次的求和</d><d p="288.79100,1,25,16777215,1586268414,0,fe5025b6,30999177845014533">不是，矩阵大小是S(l+1)*S(l)</d><d p="340.88500,1,25,16777215,1586229446,0,1a560693,30978747271217157">感谢科普</d><d p="29.30800,1,25,16777215,1586228927,0,1a560693,30978475370741763">这章听三四遍比较好</d><d p="390.16800,1,25,16777215,1586142134,0,1a560693,30932970885873667">感觉有点难</d><d p="188.42500,1,25,16777215,1586097693,0,95820e35,30909670971408387">没少，他就是这么个书写习惯。</d><d p="380.68000,1,25,16777215,1586076989,0,aafac015,30898815773966339">j是行，i是列</d><d p="210.42600,1,25,16777215,1585643743,0,5092fc9e,30671670566453253">对i标求和，后面的等式都有i,不用前面的括号</d><d p="192.07800,1,25,16777215,1585524446,0,ecc6a459,30609124534779909">要出现十遍，你还能说十次啊，咋每次都讨论</d><d p="385.33500,5,25,16646914,1585462834,0,a1edc5a2,30576821932130307">自己动手画画吧，没有问题，先j后i</d><d p="283.39500,1,25,16777215,1585457586,0,27e03a05,30574070448783365">弹幕不懂得能不能别BB</d><d p="397.02400,1,25,16777215,1585402459,0,dda3328e,30545167888941061">没反，建议好好看看，别跟着学线代时候的思维惯性来</d><d p="247.32100,1,25,16777215,1585389610,0,93c9d79e,30538431267340295">高三的表示准备高考之余随便看看也没啥压力</d><d p="397.48600,1,25,16777215,1585374534,0,dc83726,30530527130812423">没有反</d><d p="194.04400,1,25,16777215,1585214957,0,b673d40f,30446862823587843">习惯就好你会发现类似的公式的都这样，可能写法和我们不一样吧</d><d p="242.96200,1,25,16777215,1585211936,0,53cddc92,30445279123603461">小升初表示问题不大</d><d p="389.06300,1,25,16777215,1585129371,0,d9146b25,30401991328923653">这个公式没有问题。。</d><d p="390.18700,1,25,16777215,1585120277,0,d383eead,30397223367868419">我就想问下为什么l层所有都要加一遍</d><d p="312.75300,1,25,16777215,1585102122,0,c086a276,30387704723668997">吴恩达老师的neural network讲的不是很全面，建议配合西瓜书看看</d><d p="219.45700,1,25,16777215,1585101754,0,c086a276,30387512043110407">意思能理解就行，公式写的再完美算法不会有啥用</d><d p="386.55200,1,25,16777215,1584752765,0,55f3c341,30204541530537987">老师是对的</d><d p="402.73700,1,25,16777215,1584521507,0,1bb6dd42,30083295677513731">。。。。君 θ下标第一位就是后面一层的第几个，第二位就是前面一行层的行数，别干了，都对的了</d><d p="402.73700,1,25,16777215,1584521423,0,1bb6dd42,30083251367837699">。。君   θ矩阵就是层与层间连接的权值</d><d p="290.75600,1,25,16777215,1584076113,0,72bc2358,29849780620361735">也就是说在神经网络里面要惩罚偏置</d><d p="222.37000,1,25,16777215,1583934732,0,82119ce1,29775656466251779">我去。。。好复杂</d><d p="203.61500,1,25,16777215,1583814231,0,4a7ceec4,29712479174000643">没少呀</d><d p="6.66700,1,25,16777215,1583720505,0,b33e758b,29663339712872451">/</d><d p="338.79800,1,25,16777215,1583423925,0,9b1aeb5d,29507846237847557">打错，是预测值与实际值的差最小</d><d p="338.39700,5,25,16777215,1583423698,0,9b1aeb5d,29507727409545221">因此需要累加每个输出单元的结果，使其总和最小</d><d p="338.39700,5,25,16777215,1583423574,0,9b1aeb5d,29507662619607047">也就是该网络中的K个输出单元的预测值都最小</d><d p="338.39700,5,25,16777215,1583423522,0,9b1aeb5d,29507635311542275">代价函数希望结果最小</d><d p="338.39700,5,25,16777215,1583423425,0,9b1aeb5d,29507584029884423">矩阵大小就是sl+1*sl(忽略了偏移项)</d><d p="338.15200,5,25,16777215,1583423016,0,9b1aeb5d,29507370034397187">i j 只是这个矩阵的每一行和每一列，正则项就是对每行每列求和</d><d p="338.15200,5,25,16777215,1583422944,0,9b1aeb5d,29507332007788611">可以将相邻两层之间的theta参数看做一个矩阵</d><d p="338.15200,5,25,16777215,1583422874,0,9b1aeb5d,29507295530450947">正则项中 i j累加的位置无关</d><d p="235.36200,1,25,16777215,1583329002,0,5a510386,29458079242780677">准大一表示soeasy</d><d p="211.63600,1,25,16777215,1583294932,0,df2f9b36,29440216798855173">这个带m了所以不用放里面</d><d p="309.60200,1,25,16777215,1583241100,0,2d588b2a,29411993488719879">新版的深度学习softmax 的损失函数已经更新了，只有累加的前一项</d><d p="354.25200,1,25,16777215,1583169356,0,e41bb1e1,29374378667933699">求求这些张口就来说错误的人动手推一推吧，别等着什么都喂到嘴里</d><d p="353.82600,1,25,16777215,1583169330,0,e41bb1e1,29374365048504323">因为你用矩阵乘法写出来的行和列对应下标就是后层和前层对应的下标</d><d p="353.60800,1,25,16777215,1583169289,0,e41bb1e1,29374343627669509">我猜又有弹幕要杠为什么前层索引的要放后面，后层的索引要放前面</d><d p="353.23000,1,25,16777215,1583169245,0,e41bb1e1,29374320529113095">自己看前面约定的两个下标，前面的下标是后一层的索引，后面的下标是前一层的索引</d><d p="352.90900,1,25,16777215,1583169214,0,e41bb1e1,29374304282476551">有个p的错误，就是j在前i在后</d><d p="303.56500,1,25,16777215,1583169045,0,e41bb1e1,29374216051097605">对每个l属于1～L-1，都有对第l层的s^l个参数和(l+1)层的s^(l+1)个参数进行轮询</d><d p="303.56500,1,25,16777215,1583168939,0,e41bb1e1,29374160221765635">弹幕真是一个敢问一个敢说</d><d p="379.69900,1,25,16777215,1583071284,0,c3809150,29322961076879363">感觉应该是Θij</d><d p="225.80600,1,25,16777215,1582984030,0,d2213a2c,29277215013732359">Σ项里面少了个左括号</d><d p="189.95100,1,25,16777215,1582961208,0,4c5011fb,29265249618100229">嗯，是少了一个</d><d p="211.92100,1,25,16777215,1582855605,0,52db2ca9,29209883134918661">中括号的位置是正确的老兄们，这是为了防止后面的正则化处理也被当做求和</d><d p="256.02800,1,25,16777215,1582706540,0,cbc1a93b,29131730052972551">位置没错，但是确实是在log里面。跟他上面交待的一样</d><d p="357.18200,1,25,16777215,1582380940,0,948fb5f9,28961022124490756">j是sl+1层的 thetaji就是说第sl层的ai 对sl+1层的xj的theta参数</d><d p="286.95900,1,25,16777215,1582014184,0,5ebce67e,28768736065880064">因为还有一个偏置元所以要加一</d><d p="220.14600,1,25,16777215,1581671125,0,e5c7aebb,28588874178494468">中括号位置不对</d><d p="341.80900,1,25,16777215,1581495355,0,eea03dc9,28496720059957250">不是应该j在i后面吗</d><d p="212.83100,1,25,16777215,1580977396,0,e4693d1b,28225160434155524">没少，都有i了</d><d p="279.88900,1,25,16777215,1580910223,0,5e7966dd,28189942887219200">正则化项当中 为什么是j=1~sl+1？最多不就是l层吗</d><d p="194.05700,1,25,16777215,1580717590,0,abf6de57,28088947430129664">是的，之前视频里逻辑回归的代价函数求和那儿也没有括号</d><d p="265.09500,1,25,16777215,1580547684,0,3bea2419,27999868025307136">k的位置没错吧</d><d p="206.45400,1,25,16777215,1580547442,0,3bea2419,27999741045899266">中括号的位置应该在求和那里</d><d p="372.48900,1,25,16777215,1580481606,0,b10670e1,27965224178941954">这里ij哪个是行哪个是列呀？</d><d p="400.58300,1,25,16777215,1579767935,0,b83877ee,27591054645526528">theta是联系x的系数,x0才是偏置项吧</d><d p="300.41300,1,25,16777215,1579767224,0,b83877ee,27590681961693184">每层不考虑偏置单元就是s_l+1 * s_l个theta</d><d p="278.84700,1,25,16777215,1579767115,0,b83877ee,27590624610353156">后面的正则化项,包含L-1层除偏置单元外的所有的theta</d><d p="258.61800,1,25,16777215,1579766849,0,b83877ee,27590485193785348">那个多出来的括号是说明里约定好的</d><d p="186.95800,1,25,16777215,1579432286,0,f5662250,27415078102892544">求和那里少一个括号吧</d><d p="204.89900,1,25,16777215,1578967019,0,a074631e,27171144130887684">少写了一个括号</d><d p="291.10300,1,25,16777215,1578889644,0,bb9ed347,27130577174396928">累加k个</d><d p="235.80900,1,25,16777215,1578889283,0,bb9ed347,27130388165951490">k=最后一层分类个数</d><d p="242.72900,1,25,16777215,1578739686,0,9ebb207e,27051956370407424">全员丈育</d><d p="263.35200,1,25,16777215,1577953929,0,49201fd,26639993005408256">k位置我感觉没错啊</d><d p="233.42900,1,25,16777215,1577953821,0,49201fd,26639936570523648">这不就是几个球和叠加，多了先后顺序而已</d><d p="223.86600,1,25,16777215,1577653040,0,554b1ab8,26482240825327618">woc</d><d p="222.43300,1,25,16777215,1576576541,0,4ef9e08e,25917845093744644">我的神啊</d><d p="261.85700,1,25,16777215,1575554965,0,e1010a7c,25382244857151490">前面的，这样表示也是对的=。=</d><d p="398.51700,1,25,16777215,1575444597,0,7a8e53b6,25324380673802240">下标为0的theta是偏置项，不论如何优化都始终为1，故不计入</d><d p="256.25700,1,25,16777215,1575030730,0,cb10c3f2,25107395186262016">对 K位置错了其实它有一个括号没必要存在</d><d p="253.09800,1,25,16777215,1574759719,0,43dc3485,24965307039219716">底下代价函数的下标k是不是搞错地方了啊，该在log的括号里面？</d><d p="370.10200,1,25,16777215,1574759262,0,43dc3485,24965067742642178">没错啊</d><d p="387.08600,1,25,16777215,1574669896,0,1ee2370,24918214167756800">下标错了</d><d p="265.25100,1,25,16777215,1574669273,0,1ee2370,24917887257935876">这有啥不懂的。。。原来一个输出，现在多个输出</d><d p="228.05500,1,25,16777215,1574585797,0,a34b66a3,24874122313990144">谁懂这个士子</d><d p="388.40900,1,25,16777215,1572263887,0,d2bb87c4,23656772311973892">是对的 可不加的</d><d p="357.66600,1,25,16707842,1569637214,0,c1f0f089,22279639493246978">求和符号后面可以不写括号</d><d p="400.74000,1,25,16777215,1564109038,0,30c28695,19381282751381508">但是推理过程用了最大似然估计</d><d p="382.85300,1,25,16777215,1564109020,0,30c28695,19381273397035010">应该是对的</d></i>