<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>88849830</chatid><mission>0</mission><maxlimit>1500</maxlimit><state>0</state><real_name>0</real_name><source>k-v</source><d p="172.52400,1,25,16777215,1603981770,0,bf216eae,40286077776822275">对的</d><d p="313.18300,1,25,16777215,1603715873,0,61cbacfe,40146671474049027">这不比神经网络简单很多，神经网络都熬过来了</d><d p="424.34400,1,25,16777215,1603193495,0,960b8744,39872794766344195">说鲁棒性有问题的，你本科学的啥？</d><d p="367.67500,1,25,16777215,1603191659,0,5276cab8,39871831903043589">robust</d><d p="350.51500,1,25,16777215,1603191636,0,5276cab8,39871820197265411">大距离啥这个意思呀</d><d p="332.99500,1,25,16777215,1603191578,0,5276cab8,39871789735084039">我是来扫盲的</d><d p="177.59400,1,25,16777215,1603190950,0,5276cab8,39871460585504773">叮钩</d><d p="422.17500,1,25,16777215,1602922593,0,83126786,39730764013109251">搞控制的都知道鲁棒性吧</d><d p="395.49100,1,25,16777215,1602663275,0,e89cf52b,39594806843801605">就是翻译成鲁棒性的</d><d p="362.10000,1,25,16777215,1602219556,0,1b5d2d0e,39362170458734599">鲁棒性</d><d p="391.67900,1,25,16777215,1601904771,0,fe6e24ee,39197132245696517">鲁棒性怎么就笑死你了？专业术语哪里不对？</d><d p="135.82100,1,25,16777215,1601903239,0,d297ee41,39196329081044999">我觉得你们应该找本书看看</d><d p="32.75700,1,25,16777215,1601902651,0,d297ee41,39196020944404483">考过研来看很轻松</d><d p="24.86700,1,25,16777215,1601902643,0,d297ee41,39196016774742021">其实并不是很复杂啊</d><d p="23.03900,1,25,16777215,1601260404,0,75bc0969,38859298310717447">这节很简单的吧，我感觉正常考到大学的不听也会</d><d p="416.49000,1,25,16777215,1601212685,0,5222086a,38834279616086021">鲁棒性翻译没毛病</d><d p="311.02400,1,25,16777215,1599896623,0,8fecba18,38144284452454403">李航的《统计学习方法》里面讲得更加容易理解，建议不懂的去看一下</d><d p="123.46600,1,25,16777215,1599488877,0,bc65e96b,37930507780489221">个人觉得西瓜书给出的过程更好理解</d><d p="169.49400,1,25,16777215,1599140285,0,dc1c64ae,37747745571209221">正则项的求和下标应该是j</d><d p="532.14800,1,25,16777215,1597838502,0,1b6e9f2e,37065236218904581">专业</d><d p="561.74700,1,25,16777215,1597774054,0,f979e7b8,37031446842441733">相当于过拟合</d><d p="565.71200,1,25,16777215,1597774031,0,f979e7b8,37031434931142661">相当于过拟合</d><d p="581.08400,1,25,16777215,1596624874,0,c143a50e,36428945403936773">C设置得小可以理解为防止过拟合？</d><d p="137.43500,1,25,16777215,1596333766,0,3c86f3bc,36276321207189573">好好看看西瓜书</d><d p="4.31700,5,25,16646914,1596075271,0,973c5451,36140795293597699">71/112</d><d p="25.13200,1,25,16777215,1595912317,0,a5ac3b2b,36055360429621255">是的 学个大概就好了 千万不要试图自己去实现</d><d p="141.83400,1,25,16777215,1595750332,0,cfcaaace,35970433774256131">秒啊</d><d p="572.56700,1,25,16777215,1595173997,0,ed9823ae,35668267894833155">其实应该先将这个图再推前面的</d><d p="173.62500,1,25,16777215,1594882815,0,97d98fef,35515604982562821">是j</d><d p="392.10400,1,25,16777215,1594624462,0,2a12a318,35380153623248901">为什么还会有人嘲笑鲁棒性这样的翻译？自己无知笑翻译不好？计算机术语都不知道？</d><d p="56.15600,1,25,16777215,1593940723,0,bfde17ba,35021677428998149">hinge loss</d><d p="79.47900,1,25,16777215,1593702068,0,372f0c7c,34896553784115207">正则项的求和是应该是j</d><d p="45.01100,1,25,16777215,1593701948,0,372f0c7c,34896490759454725">我觉不算，毕竟这是cost不是active</d><d p="552.62300,1,25,16777215,1593598687,0,6ff80d80,34842352035037191">讲得非常不错喔</d><d p="387.14700,1,25,16777215,1593487066,0,9e6f61f8,34783830372515843">机智啊</d><d p="124.35700,1,25,16777215,1593486720,0,9e6f61f8,34783649149222915">原来是没有间隔的，现在间隔为2，所以叫大间隔，是这样理解嘛</d><d p="45.31800,1,25,16777215,1592288730,0,cb1ae9bb,34155557316722691">这个不算是relu吧，那个是把负的部分抹成零，全称是Rectified Linear Unit（线性修正单元），英文全写已经说明了这个激活函数的作用，所以这里不算是relu</d><d p="386.98700,1,25,16777215,1591864158,0,a1dfe232,33932959325093893">鲁棒性？这个翻译笑死我了</d><d p="399.33500,1,25,16777215,1591168049,0,3939c4f5,33567997511598085">距离边界要远</d><d p="355.62000,1,25,16777215,1591168014,0,3939c4f5,33567979156799495">看李航的统计学习方法</d><d p="117.42900,1,25,16777215,1591014184,0,1521ab94,33487327932186631">这个是cost不是cos</d><d p="256.03500,1,25,16777215,1590978568,0,40f81908,33468654876098567">y=1,0tx≥1；y=0,0tx小于等于-1. 这就造成了对于所有的样本，都能使左边那项变成0，所以优化函数进一步简化</d><d p="521.49500,1,25,16777215,1590580531,0,1c315f17,33259969124499459">c决定对噪声点的重视程度</d><d p="202.01100,1,25,16777215,1590579775,0,1c315f17,33259572672069637">能不能那么死脑筋 肯定是j啊 服了 不要这些小细节纠结个不停 清楚就好了。。</d><d p="273.69100,1,25,16777215,1590570649,0,ee5855c4,33254788033937415">说实话，这一章节真没看懂，三遍了。。。还是没懂</d><d p="74.63400,1,25,16777215,1590251543,0,a3b0346e,33087484734734343">小于等于—1</d><d p="326.58700,1,25,16777215,1589187394,0,bf86d4b7,32529563900706821">不如看周志华的机器学习这部分介绍</d><d p="104.13800,1,25,16777215,1588914324,0,4b196b87,32386396729114629">我想知道为什么cost(z)函数长这个样子，线性函数？这不是三角函数吗？</d><d p="381.97400,1,25,16777215,1588851844,0,56945880,32353639104774151">看到这三条直线，突然懂 那个cost函数里的截距 1 的作用了</d><d p="389.29700,1,25,16777215,1588302581,0,f548e115,32065667465216003">marine？</d><d p="398.82800,1,25,16777215,1587716991,0,5856b884,31758649264177155">流派啊</d><d p="41.39000,1,25,16777215,1587716633,0,5856b884,31758461872111621">这个算是ReLU吗</d><d p="10.76900,1,25,16777215,1587716603,0,5856b884,31758445820510213">SVM的数学原理很复杂。。</d><d p="251.05500,1,25,16777215,1587700779,0,d3883ae1,31750149402263557">第一项cost为0为最小</d><d p="124.90300,1,25,16777215,1587652092,0,fbb83d28,31724623490973703">中间的只是会有很大代价</d><d p="85.80800,1,25,16777215,1587613203,0,3307d0d6,31704234763223047">一个是概率大于0.5，一个是概率接近1</d><d p="187.88900,1,25,16777215,1587284272,0,46f4ef83,31531779792306181">我也感觉那个求和下标是j</d><d p="164.77100,1,25,16777215,1587045934,0,c31968db,31406822346719239">后面那个式子求和下标应该是j吧</d><d p="280.51500,1,25,16777215,1586831017,0,7e32f6c4,31294143974604803">就看了一遍感觉挺好理解的啊，只要逻辑回归那理解清楚这里就很简单了</d><d p="393.44500,1,25,16777215,1586484363,0,c15a3083,31112397136068615">先讲这段多好啊</d><d p="76.41700,1,25,16777215,1586408465,0,d71bb566,31072604627927045">问一下，后面的求和公式下标是j还是i？？</d><d p="125.06600,1,25,16777215,1586229494,0,27e03a05,30978772708098053">能接着听么</d><d p="286.31200,1,25,16777215,1586164136,0,13757a3,30944506194427911">正片开始</d><d p="382.97700,1,25,16777215,1585837610,0,94f946b4,30773312645234691">啥性？？？</d><d p="355.70800,1,25,16777215,1585817061,0,b2177077,30762538970906627">最大间距</d><d p="15.87000,1,25,16777215,1585235155,0,937bb58b,30457452679397381">2？</d><d p="379.08900,1,25,16777215,1585193628,0,e1d2f2ed,30435680293748741">robust</d><d p="383.04300,1,25,16777215,1584610190,0,8f61a8cc,30129790698651653">鲁棒性（rubst）强可以理解为误分类的概率更小，或者说有更高的容错性</d><d p="114.21900,1,25,16777215,1584266536,0,72bc2358,29949617424564229">[-1, 1]就是大间隔的意思么~</d><d p="389.51500,1,25,16777215,1584185605,0,b6b14c03,29907186284494851">1，-1就是因为这里来的</d><d p="385.75100,1,25,16777215,1584185584,0,b6b14c03,29907174904299527">rubustness,看英文会理解好点吧</d><d p="122.30300,1,25,16777215,1584185220,0,b6b14c03,29906984210268163">中间invalid？</d><d p="427.96400,1,25,16777215,1584020714,0,49688fb1,29820735468339207">做题做到这里卡住了，回来再看的，看了题回来看理解就很深很深了</d><d p="380.09800,1,25,16777215,1583891349,0,20a7dde5,29752911156215815">就是面对干扰时候的稳定性</d><d p="389.57000,1,25,16777215,1583765208,0,30a5c70c,29686777115574277">健壮性</d><d p="131.75500,1,25,16777215,1583717126,0,e78a5fc6,29661568139526147">现在讲的是在找一个最大间隔，在这个间隔之间没有样本，不用考虑（-1,1）之间的</d><d p="384.25100,1,25,16777215,1583663641,0,2bc77279,29633526824960007">就是健壮性的意思</d><d p="93.55700,1,25,16777215,1583312558,0,45e23186,29449457892327429">这个代价函数 图一y=1  当z&gt;1时代价为0，y=1</d><d p="276.08800,1,25,16777215,1582433795,0,609d41de,28988733402382340">秒啊</d><d p="383.01500,1,25,16777215,1581916071,0,94deb5c7,28717296592617476">rubustness---抗干扰性</d><d p="75.95000,1,25,16777215,1581413740,0,49201fd,28453930791862274">写错了</d><d p="373.28300,1,25,16777215,1581317118,0,b83877ee,28403272850079812">鲁棒性是啥?</d><d p="277.17800,1,25,16777215,1581312479,0,b83877ee,28400840809119748">就是在说使得代价函数最小的条件</d><d p="86.72800,1,25,16777215,1581311334,0,b83877ee,28400240535011328">SVM的假设函数变了</d><d p="63.28100,1,25,16777215,1581311008,0,b83877ee,28400069435195392">negative one</d><d p="288.41500,1,25,16777215,1580804741,0,86bd32af,28134639905275908">可以去看李航老师的《统计学习方法》，那里面SVM的推导很仔细</d><d p="87.11700,1,25,16755202,1580799862,0,426bbc10,28132081876860996">y==1的时候要&gt;&gt;0，但是区分正负样本只要&gt;0.sigmoid的函数</d><d p="307.23500,1,25,16777215,1580708453,0,41a488a4,28084156848668674">笑哭</d><d p="301.03700,1,25,16777215,1580708447,0,41a488a4,28084153635307524">怎么还有大佬看到这里来了</d><d p="414.33900,1,25,16777215,1579375049,0,554b1ab8,27385069450035204">好下一节</d><d p="275.42400,1,25,16777215,1579007076,0,bb9ed347,27192145512235008">他直接从J(theta)开始推，有点跳跃</d><d p="86.40500,1,25,16777215,1579006681,0,bb9ed347,27191938480865284">cost函数变了</d><d p="70.80600,1,25,16777215,1578535993,0,eb06dedd,26945162060496900">这里应该是z&lt;-1吧</d><d p="116.68300,1,25,16777215,1576595264,0,f822fd07,25927661639434240">那中间-1到1的样本咋办</d><d p="90.97400,1,25,16777215,1576589607,0,67d0440f,25924695488987136">两个函数 两个不同的图</d><d p="82.51800,1,25,16777215,1576423968,0,b15c2cc,25837853037035522">刚刚不是说logistic回归y=1时z应该&gt;&gt;0吗，现在为什么变成z&gt;=0了？大佬赐教</d><d p="413.40200,1,25,16777215,1576051935,0,be52a5b4,25642800438050820">我说感觉漏了什么，果然你没解锁</d><d p="263.44800,1,25,16777215,1576051760,0,be52a5b4,25642708903657476">已经看两遍了，总感觉漏了点东西</d><d p="249.80000,1,25,16777215,1570774204,0,7c24ef0a,22875749686444032">听不懂就暂停或者复习上一个视频啊</d><d p="244.36600,1,25,16777215,1569337241,0,41793bca,22122367173525504">  听不懂了。。</d></i>