<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>88848991</chatid><mission>0</mission><maxlimit>1500</maxlimit><state>0</state><real_name>0</real_name><source>k-v</source><d p="86.24200,1,25,16777215,1603866835,0,789dbb5a,40225819038580741">还有人吗</d><d p="306.10800,1,25,16777215,1603853443,0,32f64392,40218797757431813">败者食尘</d><d p="313.52500,1,25,16777215,1603281544,0,1e46147e,39918957508952069">信条</d><d p="718.81400,1,25,16777215,1603210078,0,3ac20a8b,39881488821387267">右边是两个n*1的向量 所以计算的时候是 .* 然后再sum?</d><d p="611.13300,1,25,16777215,1603209364,0,3ac20a8b,39881114774405123">你先撸清楚分别代表的意思 或者你把向量先展开 再看矛盾不矛盾</d><d p="586.24000,1,25,16777215,1603209171,0,3ac20a8b,39881013413806087">绿字认真的？这里需要偏导？</d><d p="556.02200,1,25,16777215,1603209072,0,3ac20a8b,39880961480458247">如果是小白就别跳 跳了到时候实现的时候就懵逼了</d><d p="341.49900,1,25,16777215,1602900570,0,a6982da1,39719217587552261">2人正在看，163条弹幕</d><d p="563.15700,1,25,16777215,1602773145,0,5276cab8,39652410055458823">喵啊</d><d p="431.18700,1,25,16777215,1602773012,0,5276cab8,39652340575764549">叼他</d><d p="322.58700,1,25,16777215,1602772890,0,5276cab8,39652276657717251">现在有golang了</d><d p="293.74700,1,25,16777215,1602772843,0,5276cab8,39652252095873031">这是什么库</d><d p="126.87400,1,25,16777215,1602772726,0,5276cab8,39652190840160263">没人了？</d><d p="308.22600,1,25,16777215,1602592610,0,940d9a98,39557758195859463">败者食尘</d><d p="333.13000,1,25,16777215,1602472784,0,6433afde,39494934522232837">梅开二度</d><d p="311.83600,1,25,16777215,1602425890,0,d0651d5f,39470348764184579">嘿嘿</d><d p="309.39200,1,25,16777215,1602404717,0,9e9bcee7,39459247722856451">应该是刚才那段忘剪掉了</d><d p="299.64700,1,25,16777215,1602404682,0,9e9bcee7,39459229417865221">重新来过 哈哈哈</d><d p="322.11800,1,25,16777215,1602394093,0,d5efbfe8,39453677813497863">败者食尘！</d><d p="667.95900,1,25,16777215,1602151462,0,a90bfa0,39326469161222151">横着写就容易理解了</d><d p="658.58500,1,25,16777215,1602148120,0,7b0b1ef6,39324717168459781">X^(i)不是应该横着写吗？</d><d p="67.39400,1,25,16777215,1602138088,0,d102cf5,39319457611907077">10人</d><d p="446.95000,1,25,16777215,1602080844,0,153802b2,39289444972888067">... difficult</d><d p="299.64600,1,25,16777215,1601968858,0,88c11aac,39230732239896581">是的 你穿越回去了大概6秒</d><d p="652.91600,1,25,16777215,1601715396,0,4c28bb0c,39097845015379975">这里应该是写错了吧</d><d p="607.65600,1,25,16777215,1601715264,0,4c28bb0c,39097775989719043">预测和差值向量维度为m，x（i）维度为n，两个矛盾</d><d p="603.67800,1,25,16777215,1601715088,0,4c28bb0c,39097683947290631">delta的表达式后面应该写X0吧，delta1=[m个样本的预测和实际差值,维度为1 x m]  乘上 [X0(1) X0(2) ... X0(m) 维度为m x 1],</d><d p="565.06300,1,25,16777215,1601714574,0,4c28bb0c,39097414095208453">预测和实际的差值构成一个向量，x（i）构成一个向量，两个向量内积成为一个数</d><d p="757.69600,1,25,16777215,1600867205,0,b8d0f0c8,38653148758278147">喵~~~</d><d p="659.00500,1,25,16777215,1600818665,0,128aedcc,38627699973423111">因为那样很麻烦‘括号里的是一个固定数’只需算一次，是个标量</d><d p="304.78900,1,25,16707842,1600580758,0,2d067f52,38502968186634247">我穿越了</d><d p="258.36700,1,25,16777215,1599877981,0,9c35e216,38134510700724229">他们封装的有算法优化的，不只是简单的循环</d><d p="138.50800,1,25,16777215,1599829630,0,160e7586,38109160696971269">妙啊</d><d p="146.25100,1,25,16777215,1599637623,0,1a0b5366,38008493430013957">因为高数学过。。</d><d p="522.80100,1,25,16777215,1598700463,0,18afb363,37517152126763013">叶斯莫拉</d><d p="485.20200,1,25,16777215,1598700417,0,18afb363,37517127830208519">ZBC</d><d p="226.54300,1,25,16777215,1598015039,0,3df82069,37157792462143491">时间复杂度是一样的</d><d p="275.32700,1,25,16777215,1597993306,0,9fda92b1,37146398240014343">c语言的循环就看着舒服多了</d><d p="600.38000,1,25,16777215,1597818752,0,dcd1fe7e,37054881352122439">应该是一个值吧。。  y肯定是一个值叭。。</d><d p="421.76800,1,25,16777215,1597735709,0,358cdd8a,37011342835056647">h</d><d p="562.03200,1,25,16777215,1597667658,0,b8f54774,36975664724180995">我也觉得是个向量，不应该是real</d><d p="267.55800,1,25,16777215,1597631671,0,e6bc82ba,36956797046620165">真实</d><d p="693.82200,1,25,16777215,1597505287,0,a781365e,36890535751843843">我怎么感觉后面那一串东西就是一个实数。。</d><d p="304.11800,1,25,16777215,1596859421,0,c10d6c0f,36551916003524675">故技重施</d><d p="547.33700,1,25,16777215,1596704121,0,6ca71599,36470493941334023">这部分可以跳过吧？？</d><d p="499.24400,1,25,16777215,1596591017,0,9fbfdc05,36411194913325059">。。。。</d><d p="480.23500,1,25,16777215,1596590998,0,9fbfdc05,36411184942940165">ZSY</d><d p="55.57200,1,25,16777215,1595735519,0,398d17d5,35962667401216007">2333</d><d p="1.32200,5,25,16646914,1595691173,0,973c5451,35939417209700355">31/112</d><d p="187.76300,1,25,16777215,1595673077,0,137de978,35929929596534789">很基础</d><d p="794.28400,1,25,16777215,1595471829,0,2f052ae2,35824417713422341">乘积的累加和都可以写成行向量乘列向量的形式</d><d p="346.54500,1,25,16777215,1595470711,0,2f052ae2,35823831503339523">C++的灵魂就是oop和泛型啊</d><d p="415.93900,1,25,16777215,1595234186,0,5a0e6ac0,35699824397385735">hello world</d><d p="324.14800,1,25,16777215,1594890095,0,bcbe5e50,35519421836427267">重载</d><d p="409.25600,1,25,16777215,1594630885,0,a9f678f5,35383521171734535">hi</d><d p="562.31000,1,25,16777215,1594567552,0,231238f0,35350316147802119">在一行的delta里面，这里的h-y是向量。</d><d p="319.11500,1,25,16777215,1594518697,0,114b98de,35324702288248837">C++永远的神</d><d p="308.06900,1,25,16777215,1594369642,0,231238f0,35246554661519365">忘记剪掉了</d><d p="141.28300,1,25,16777215,1594267301,0,92d9634d,35192898244837447">好厉害</d><d p="141.28300,1,25,16777215,1594267292,0,92d9634d,35192893362667527">还厉害</d><d p="581.15400,1,25,52480,1593862189,0,a5c50d86,34980502982623239">反复看了3遍，又去补了下偏导数的知识，第四遍终于看懂了</d><d p="767.90300,5,25,16646914,1592304350,0,e932df8c,34163746830024711">你这个问题跟为什么B站没有0倍速 有什么沙雕区别？</d><d p="318.44700,1,25,16777215,1592034038,0,cc81c775,34022025381019653">从MATLAB向我禁止使用的时代来考古</d><d p="680.19100,1,25,16777215,1591971157,0,5ad18398,33989057335263235">就是线性的东西，加权嘛</d><d p="584.31400,1,25,16777215,1591971072,0,5ad18398,33989013018247175">通过举例给你理解</d><d p="559.17100,1,25,16777215,1591971055,0,5ad18398,33989004246908931">这真是通俗易懂了</d><d p="345.74000,1,25,16777215,1591970915,0,5ad18398,33988930687205381">估计是用学C的思路学C++的</d><d p="196.21500,1,25,16777215,1591970765,0,5ad18398,33988852179795971">用多python回来用matlab下标老搞错。。</d><d p="718.95200,1,25,16777215,1591761569,0,8b357bd9,33879173230493699">不是很简单吗0w0</d><d p="342.87500,1,25,16777215,1591625481,0,9e6f61f8,33807824041541637">学C++没学类和对象？</d><d p="813.18200,1,25,16777215,1591561875,0,9374f99,33774475828789255">这一段一定要理解透啊</d><d p="700.27000,1,25,16777215,1591262458,0,ab516041,33617495432626183">巧了，我也是这么算的</d><d p="303.74500,1,25,16777215,1591261775,0,ab516041,33617137152032771">梅开二度？？</d><d p="793.21900,1,25,16777215,1591091002,0,4b9c121f,33527602629574659">就是列向量</d><d p="308.09100,1,25,16777215,1591080838,0,a839618c,33522274065186821">这也能炸出jo厨？？？</d><d p="762.41000,1,25,16777215,1590588840,0,5ad18398,33264325224824837">为啥B站没有1.75倍速</d><d p="720.99700,1,25,16777215,1590588812,0,5ad18398,33264310741893127">我半年没看，现在又得回头看- -</d><d p="580.07000,1,25,16777215,1590588718,0,5ad18398,33264261482414087">微积分、线性代数和数理统计很重要</d><d p="168.38800,1,25,16777215,1590588364,0,5ad18398,33264075876073479">向量内积，后面核方法很普遍这个思路很重要</d><d p="752.99100,1,25,16777215,1590257991,0,cc0efa78,33090865203773445">妙</d><d p="779.34100,1,25,16777215,1589806117,0,7a547fd6,32853953003651075">这里有两个地方需要向量化，一个是把所有的式子向量化，还有一个是吧和号公式那里向量化，老师只讲了第一个</d><d p="516.24400,1,25,16777215,1588924199,0,170c156b,32391574277586951">怎么突然变小了</d><d p="574.42700,1,25,16777215,1587993795,0,8c828548,31903774433345541">这里记得前面讲的求导结果就行了 绿色框里的是偏导 再乘上学习率 计算就得到了更新的希特值</d><d p="648.52500,1,25,16777215,1587824644,0,b6c95393,31815090436571143">这不是梯度下降？</d><d p="133.55000,1,25,16777215,1587823662,0,b6c95393,31814575747760131">哇！好棒</d><d p="165.25400,1,25,16777215,1587822070,0,e76bb788,31813740928696327">buct</d><d p="678.16800,1,25,16777215,1587717440,0,93a15ccb,31758884824678403">样本和预测值的差，一直在变化，但是是常数</d><d p="635.00900,1,25,16777215,1587631652,0,ab8698b,31713907103498243">是向量吧？</d><d p="568.87100,1,25,16777215,1587620042,0,78a7e9a1,31707820118769669">本来是会的，又看糊涂了。。。</d><d p="163.82300,1,25,16777215,1587522182,0,1242fd0f,31656513417773059">其实上一节的cost FunctionJ函数就是这样实现的</d><d p="700.26800,1,25,16777215,1587228449,0,1b808049,31502512701833223">对的</d><d p="533.14800,1,25,16777215,1587214496,0,1b808049,31495197088022533">讲数学不香吗</d><d p="174.79900,1,25,16777215,1587214071,0,1b808049,31494974320672771">在学校学c++也是得用循环一个个来算，打基础嘛</d><d p="51.94000,1,25,16777215,1587213888,0,1b808049,31494878310957059">import sklearn</d><d p="789.13200,1,25,16777215,1587046551,0,92f5f475,31407145969778693">对的  &amp;是向量</d><d p="675.73700,1,25,16777215,1587045649,0,92f5f475,31406673058856965">前面那些疑惑为什么h是常数 听听这里</d><d p="220.15200,1,25,16777215,1587037874,0,92f5f475,31402596715462661">你不是第一个</d><d p="558.63600,1,25,16777215,1587026868,0,e994e085,31396826289012743">这个预测-参考的差值为啥是一个实数呀？不应该也是一个向量吗</d><d p="247.95100,1,25,16777215,1586421801,0,d32da7f3,31079596594561027">因为他们的列数一样，转置其中一个可以就可以构成可以运算的两个矩阵1*3的和3*1的</d><d p="618.37400,1,25,16777215,1586192726,0,2e0bdfc2,30959495456227333">针对不同的i，h(x)-y的值也是不同的，为什么说他是一个实数呢？这里不太懂</d><d p="627.44500,1,25,16777215,1586191740,0,2e0bdfc2,30958978582183943">为什么h(x)-y是实数？</d><d p="236.90600,1,25,16777215,1586167956,0,bf86d4b7,30946509030686791">456</d><d p="229.31100,1,25,16777215,1586167948,0,bf86d4b7,30946504853684229">123</d><d p="643.06200,1,25,16777215,1585983184,0,d03cac65,30849635180871687">这个没讲过吧</d><d p="805.15300,5,25,16777215,1585816295,0,2a9a8732,30762137147670531">这是delta  不是西格玛...</d><d p="706.08000,1,25,16777215,1585735783,0,8572425a,30719925812723719">对的</d><d p="301.96600,1,25,16777215,1585733605,0,8572425a,30718784066551813">？？？？？？</d><d p="427.51000,1,25,16777215,1585455023,0,bf60d17c,30572726517760007">由我来证明你开了弹幕</d><d p="404.51500,1,25,16777215,1585281312,0,4fef69d6,30481652076511235">heo</d><d p="302.38900,1,25,16777215,1584454185,0,8a75dc16,30047999339003909">木大木大木大木大木大</d><d p="156.77900,1,25,16777215,1584209280,0,22cc91d9,29919598419640323">嗯</d><d p="822.68500,1,25,16777215,1584082365,0,aee2acb,29853058414936067">这也就是为什么机器学习的算法的参数几乎都是矩阵或者向量</d><d p="687.22500,1,25,16777215,1583851769,0,deee3d4c,29732159753814023">把三个算式压缩成不同方向上的向量的表示方式，只需要计算一次就行了</d><d p="181.24800,1,25,16777215,1583841567,0,e04b20b9,29726811086127109">正常，这就属于一种简单的算法优化</d><d p="821.47200,1,25,16777215,1583679069,0,a267b76d,29641615474688007">我傻了</d><d p="811.33500,1,25,16777215,1583679059,0,a267b76d,29641610114891779">太牛逼了吧woc</d><d p="626.55600,1,25,16777215,1583677840,0,a267b76d,29640970815930439">算一次</d><d p="585.01200,1,25,16777215,1583640025,0,674ea418,29621145246892035">没反，上标i是第i个训练集，下标代表是特征</d><d p="534.98200,1,25,16777215,1583639806,0,674ea418,29621029937610755">看两遍才明白</d><d p="629.36700,1,25,16777215,1583501607,0,82119ce1,29548574102519813">我好像不记得有讲过这个..</d><d p="807.37800,1,25,16777215,1583391263,0,92f5f475,29490722114633731">纠结的唉声叹气</d><d p="794.25200,1,25,16777215,1583391226,0,92f5f475,29490702647820291">不用算三次  sigema 就等于那个式子</d><d p="589.14100,1,25,16777215,1583388899,0,92f5f475,29489482731880455">没反哦</d><d p="338.39300,1,25,16777215,1583317260,0,9534404f,29451923296878595">好吧，我当时可能没有学到 类和对象</d><d p="167.02700,1,25,16777215,1583317089,0,9534404f,29451833404555271">我原来真是个沙雕，我还真是这么写的</d><d p="716.07100,1,25,16777215,1583224696,0,45ddfd76,29403392824049671">总结一下,由于编程语言中的线性代数的库中所写好的矩阵与矩阵相乘的算法比我们自己写的要好,所以要想办法将算式中单个数字与数字的计算转换为矩阵与矩阵之间的运算</d><d p="299.60700,1,25,16777215,1583223285,0,45ddfd76,29402653247668231">这是替身攻击!败者食尘!</d><d p="398.94100,1,25,16777215,1583119387,0,a1fdb00f,29348180876328965">hello</d><d p="578.51200,1,25,16777215,1583058275,0,300d09c3,29316140506284037">x_0(i)?x0_(0)</d><d p="225.45300,1,25,16777215,1583058012,0,300d09c3,29316002388901893">下标这种事很重要的说</d><d p="820.91500,1,25,16777215,1582458737,0,2bc77279,29001809775820804">建议不要欠技术栈，做课后练习</d><d p="714.19500,1,25,16777215,1582458505,0,2bc77279,29001688074420224">听了两边听懂了~</d><d p="291.78700,1,25,16777215,1582344841,0,b20c73df,28942095415246848">时间回朔！</d><d p="697.01300,1,25,16777215,1582344458,0,ddf38e67,28941894780715008">我算的是1/m*(((X*theta)'-y')*X)',其中theta和y是列向量，不知道对不对</d><d p="787.65900,1,25,16777215,1582104911,0,c7669c78,28816303039447044">向量乘除实数不一样还是向量</d><d p="727.09900,1,25,16777215,1582104798,0,c7669c78,28816244096892928">如果你有不懂的地方，我觉得你可以回去看看x（i）代表什么</d><d p="636.60900,1,25,16777215,1582103523,0,d5472660,28815575655907330">只用算一次</d><d p="582.99200,1,25,16777215,1582025690,0,7c88b226,28774768396206080">没看懂的建议去多功能那一节看一下这些符号的具体含义</d><d p="712.99400,1,25,16777215,1581928573,0,fab50d15,28723851416305668">等式右边将所有式子转化为向量，再对向量进行求和</d><d p="710.33400,1,25,16777215,1581928497,0,fab50d15,28723811480764416">相当于是把所有的式子用矩阵和向量来表示</d><d p="730.56200,1,25,16777215,1581409248,0,fc4a0bd5,28451575259201538">向量相加还是向量</d><d p="584.14500,1,25,16777215,1581301051,0,19fefde4,28394848809648132">没反</d><d p="714.80700,1,25,16777215,1581223869,0,ff8d5a87,28354383689285634">没有给出最终代码呀</d><d p="818.47900,1,25,16777215,1581174368,0,a8925b9f,28328430590754818">想看具体算法怎么写的</d><d p="649.34900,1,25,16777215,1581152811,0,eea03dc9,28317128545796096">为什么不可以看成一个向量的转置乘另一个向量</d><d p="580.74100,1,25,16777215,1580470635,0,37524101,27959471721938946">X的上下标是不是反了</d><d p="791.01200,1,25,16777215,1580377294,0,b8ffd68b,27910534443565056">向量化可以在梯度下降的计算过程中让n个特征量保持同步更新</d><d p="565.23800,1,25,16777215,1580368011,0,22577805,27905667543597058">线代是基础</d><d p="216.20200,1,25,16777215,1580311295,0,df9c7d54,27875932049506306">太细心了吧</d><d p="235.18000,1,25,16777215,1580133455,0,e2f995b3,27782692517445632">向量化简化了好多</d><d p="203.52000,1,25,16777215,1580133408,0,e2f995b3,27782667958222848">好细心</d><d p="715.35500,1,25,16777215,1579955552,0,426bbc10,27689419961532416">求和的那一大串是一个常数，因为要符合同步更新</d><d p="707.24400,1,25,16777215,1579185712,0,6deb01c0,27285802418438148">我摊牌了，这段我听不懂了</d><d p="784.90800,1,25,16777215,1578739903,0,7b5f1e5,27052070147719168">1/m 后 &amp;还是向量吗</d><d p="765.86500,1,25,16777215,1578739876,0,7b5f1e5,27052055935844354">1/m</d><d p="623.76600,1,25,16777215,1578739719,0,7b5f1e5,27051973624201218">&amp; = [&amp;_0 &amp;_1 &amp;_2] 这个向量我是只要算 &amp; = 1/m(R向量 * x向量）吗？还是要算三次 &amp;_0 &amp;_1 &amp;_2</d><d p="721.38800,1,25,16777215,1578739471,0,7b5f1e5,27051843564077058">&amp; 是一个向量，那么里面要有三次类似u的计算吗</d><d p="256.30700,1,25,16777215,1578135941,0,4e768ad6,26735419695562754">牛批</d><d p="132.61700,1,25,16777215,1577506958,0,a074631e,26405651405078528">竟然看懂了。。转置</d><d p="529.82600,1,25,16777215,1576490545,0,bd5a883c,25872758243590148">讲了看上去很多，但实际上很少，可以去Youtube看CS229 大量数学推导</d><d p="544.97900,1,25,16777215,1575794697,0,ca17992c,25507933918330880">不想学数学就别学机器学习了</d><d p="812.10000,1,25,16777215,1575375419,0,f822fd07,25288111491121154">听懂了  只是疑惑更多了</d><d p="527.38400,1,25,16777215,1574125889,0,5b4c4d0a,24632997635424260">代码没写几行,数学学了30节课</d><d p="533.60700,1,25,16777215,1573265147,0,9c1248ae,24181721294962692">morning!</d><d p="525.64500,1,25,16777215,1572046826,0,fcc55b8,23542969776734208">morning</d><d p="791.08000,1,25,16777215,1571974385,0,5e254bf4,23504989797220352">没有问题，前面一个实数乘就应该写成列向量</d><d p="789.01600,1,25,16777215,1571902220,0,67503c8f,23467154929614852">X(i)是不是写反了，应该横着写</d><d p="531.06900,1,25,16777215,1571281485,0,2ae2682c,23141710776238082">10.17有人吗</d><d p="799.74100,1,25,16777215,1571144889,0,6170ea3a,23070095157231616">+1</d><d p="787.33700,1,25,16777215,1566738060,0,c1de7d6f,20759647421988864">不懂。。</d><d p="510.93100,1,18,16777215,1563369005,0,c598a0ec,18993292452036608">感觉在上线代课</d></i>